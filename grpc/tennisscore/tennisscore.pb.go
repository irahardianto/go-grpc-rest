// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tennisscore.proto

/*
Package tennisscore is a generated protocol buffer package.

It is generated from these files:
	tennisscore.proto

It has these top-level messages:
	ScoreRequest
	ScoreResult
*/
package tennisscore

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ScoreRequest struct {
	Player1 string `protobuf:"bytes,1,opt,name=player1" json:"player1,omitempty"`
	Player2 string `protobuf:"bytes,2,opt,name=player2" json:"player2,omitempty"`
}

func (m *ScoreRequest) Reset()                    { *m = ScoreRequest{} }
func (m *ScoreRequest) String() string            { return proto.CompactTextString(m) }
func (*ScoreRequest) ProtoMessage()               {}
func (*ScoreRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ScoreRequest) GetPlayer1() string {
	if m != nil {
		return m.Player1
	}
	return ""
}

func (m *ScoreRequest) GetPlayer2() string {
	if m != nil {
		return m.Player2
	}
	return ""
}

type ScoreResult struct {
	Score string `protobuf:"bytes,1,opt,name=score" json:"score,omitempty"`
}

func (m *ScoreResult) Reset()                    { *m = ScoreResult{} }
func (m *ScoreResult) String() string            { return proto.CompactTextString(m) }
func (*ScoreResult) ProtoMessage()               {}
func (*ScoreResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ScoreResult) GetScore() string {
	if m != nil {
		return m.Score
	}
	return ""
}

func init() {
	proto.RegisterType((*ScoreRequest)(nil), "tennisscore.ScoreRequest")
	proto.RegisterType((*ScoreResult)(nil), "tennisscore.ScoreResult")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ScoreBoard service

type ScoreBoardClient interface {
	GetScore(ctx context.Context, in *ScoreRequest, opts ...grpc.CallOption) (*ScoreResult, error)
}

type scoreBoardClient struct {
	cc *grpc.ClientConn
}

func NewScoreBoardClient(cc *grpc.ClientConn) ScoreBoardClient {
	return &scoreBoardClient{cc}
}

func (c *scoreBoardClient) GetScore(ctx context.Context, in *ScoreRequest, opts ...grpc.CallOption) (*ScoreResult, error) {
	out := new(ScoreResult)
	err := grpc.Invoke(ctx, "/tennisscore.ScoreBoard/GetScore", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ScoreBoard service

type ScoreBoardServer interface {
	GetScore(context.Context, *ScoreRequest) (*ScoreResult, error)
}

func RegisterScoreBoardServer(s *grpc.Server, srv ScoreBoardServer) {
	s.RegisterService(&_ScoreBoard_serviceDesc, srv)
}

func _ScoreBoard_GetScore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ScoreRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScoreBoardServer).GetScore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tennisscore.ScoreBoard/GetScore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScoreBoardServer).GetScore(ctx, req.(*ScoreRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ScoreBoard_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tennisscore.ScoreBoard",
	HandlerType: (*ScoreBoardServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetScore",
			Handler:    _ScoreBoard_GetScore_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "tennisscore.proto",
}

func init() { proto.RegisterFile("tennisscore.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 150 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2c, 0x49, 0xcd, 0xcb,
	0xcb, 0x2c, 0x2e, 0x4e, 0xce, 0x2f, 0x4a, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x46,
	0x12, 0x52, 0x72, 0xe2, 0xe2, 0x09, 0x06, 0x31, 0x82, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84,
	0x24, 0xb8, 0xd8, 0x0b, 0x72, 0x12, 0x2b, 0x53, 0x8b, 0x0c, 0x25, 0x18, 0x15, 0x18, 0x35, 0x38,
	0x83, 0x60, 0x5c, 0x84, 0x8c, 0x91, 0x04, 0x13, 0xb2, 0x8c, 0x91, 0x92, 0x32, 0x17, 0x37, 0xd4,
	0x8c, 0xe2, 0xd2, 0x9c, 0x12, 0x21, 0x11, 0x2e, 0x56, 0xb0, 0xd9, 0x50, 0x03, 0x20, 0x1c, 0x23,
	0x7f, 0x2e, 0x2e, 0xb0, 0x22, 0xa7, 0xfc, 0xc4, 0xa2, 0x14, 0x21, 0x47, 0x2e, 0x0e, 0xf7, 0xd4,
	0x12, 0xb0, 0x80, 0x90, 0xa4, 0x1e, 0xb2, 0x1b, 0x91, 0x5d, 0x23, 0x25, 0x81, 0x4d, 0x0a, 0x64,
	0x89, 0x12, 0x43, 0x12, 0x1b, 0xd8, 0x37, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0xed, 0x53,
	0x9f, 0x0b, 0xe2, 0x00, 0x00, 0x00,
}
